<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_angular_provider">
    <sp_angular_provider action="INSERT_OR_UPDATE">
        <name>kadEditorManager</name>
        <script><![CDATA[(function() {
	'use strict';
	angular.module('kad_editor_manager', []).factory('editorManager', function(map, config, state, pageUpdate) {
		function findPosition(item, parent) {
			var result = false;
			_.forEach(parent[config.rules[parent.type].content], function(parentItem, key) {
				if (parentItem.id == item.id) {
					result = key;
				}
			});
			return result;
		}
		function remove(item, moving) {
			if (typeof moving === 'undefined') {
				pageUpdate.remove(item);
			}
			var parent = map.getParent(item.id);
			var grandparent = map.getParent(parent.id);
			if (item.type === 'column' && parent[config.rules[parent.type].content].length == 1) {
				_.forEach(grandparent[config.rules[grandparent.type].content], function(row, key) {
					if (row.$$hashKey === parent.$$hashKey) {
						pageUpdate.remove(row);
						if (typeof moving === 'undefined') {
							map.remove(row.id);
						}
						grandparent[config.rules[grandparent.type].content].splice(key, 1);
					}
				});
				if (grandparent.type === 'container' && grandparent[config.rules[grandparent.type].content].length == 0) {
					grandparent.plusButton = true;
				}
				return grandparent;
			}
			if (parent.type === 'container' && parent[config.rules[parent.type].content].length == 1) {
				parent.plusButton = true;
			}
			map.remove(item.id);
			parent[config.rules[parent.type].content].splice(findPosition(item, parent), 1);
			return parent;
		}
		function getRowsAndColumns() {
			var row, columnSizes, column, result = [];
			_.forEach(config.columnSizes, function(sizes) {
				columnSizes = sizes.split('-');
				row = angular.copy(config.row);
				_.forEach(columnSizes, function(size) {
					column = angular.copy(config.column);
					column.size_classes[config.columnDefaultType] = +(size);
					row[config.rules.row.content].push(column);
				});
				result.push(row);
			});
			return result;
		}
		return {
			remove: remove,
			findPosition: findPosition,
			getRowsAndColumns: getRowsAndColumns
		};
	});
}());]]></script>
        <sys_class_name>sp_angular_provider</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-02-27 21:47:41</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>10a9ea000f513200f52b09ece1050ef9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>kadEditorManager</sys_name>
        <sys_package display_value="Knowledge Article Designer" source="x_27018_ka_design">4eb70bf80f053200f52b09ece1050ea5</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Knowledge Article Designer">4eb70bf80f053200f52b09ece1050ea5</sys_scope>
        <sys_update_name>sp_angular_provider_10a9ea000f513200f52b09ece1050ef9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-02-27 21:47:41</sys_updated_on>
        <type>factory</type>
    </sp_angular_provider>
</record_update>
